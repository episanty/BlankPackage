(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Input::Initialization:: *)
(* BlankPackage: a Mathematica package template *)
(* \[Copyright] Emilio Pisanty, 2023 *)

(* For more information, see https://github.com/episanty/BlankPackage *)


(* ::Input::Initialization:: *)
BeginPackage["BlankPackage`"];


(* ::Input::Initialization:: *)
$BlankPackageVersion::usage="$BlankPackageVersion prints the current version of the BlankPackage package in use and its timestamp.";
$BlankPackageTimestamp::usage="$BlankPackageTimestamp prints the timestamp of the current version of the BlankPackage package.";
Begin["`Private`"];
$BlankPackageVersion:="BlankPackage v1.0.0, "<>$BlankPackageTimestamp;
End[];


(* ::Input::Initialization:: *)
Begin["`Private`"];$BlankPackageTimestamp="Mon 13 Feb 2023 18:14:34";End[];


(* ::Input::Initialization:: *)
$BlankPackageDirectory::usage="$BlankPackageDirectory is the directory where the current BlankPackage package instance is located.";


(* ::Input::Initialization:: *)
Begin["`Private`"];
With[{softLinkTestString=StringSplit[StringJoin[ReadList["! ls -la "<>StringReplace[$InputFileName,{" "->"\\ "}],String]]," -> "]},
If[Length[softLinkTestString]>1,(*Testing in case $InputFileName is a soft link to the actual directory.*)
$BlankPackageDirectory=StringReplace[DirectoryName[softLinkTestString[[2]]],{" "->"\\ "}],
$BlankPackageDirectory=StringReplace[DirectoryName[$InputFileName],{" "->"\\ "}];
]];
End[];


(* ::Input::Initialization:: *)
$BlankPackageCommit::usage="$BlankPackageCommit returns the git commit log at the location of the BlankPackage package if there is one.";
$BlankPackageCommit::OS="$BlankPackageCommit has only been tested on Linux.";


(* ::Input::Initialization:: *)
Begin["`Private`"];
$BlankPackageCommit:=(If[$OperatingSystem!="Unix",Message[$BlankPackageCommit::OS]];
StringJoin[Riffle[ReadList["!cd "<>$BlankPackageDirectory<>" && git log -1",String],{"\n"}]]);
End[];


(* ::Input::Initialization:: *)
SampleFunction::usage="This is a sample function for the BlankPackage template.";
Begin["`Private`"];
SampleFunction[x___]:="You have evaluated the BlankPackage sample function, SampleFunction, on the input "<>ToString[x]
End[];


(* ::Input::Initialization:: *)
EndPackage[];


(* ::Input::Initialization:: *)
DistributeDefinitions["BlankPackage`"];
